t_cap_mwh = ifelse(is.na(t_cap_mwh), 0, t_cap_mwh)) %>%
select(everything(), geometry) %>%
select(-t_state)
state_areas <- read_csv("data/land/state_areas.csv") %>%
set_names(to_snake_case(colnames(.))) %>%
rename(name = state)
merged <- left_join(merged_counts, state_areas, by = "name")
ggplot(merged) +
geom_sf(aes(fill = t_count)) +
coord_sf(xlim = c(-175, -65)) +
theme(legend.position = "none",
line = element_blank(),
rect = element_blank(),
axis.text = element_blank(),
axis.title = element_blank(),
panel.grid.major = element_line(colour = "transparent"))
merged <- left_join(merged_counts, state_areas, by = "name") %>%
filter(name != "Alaska",
name != "Hawaii")
ggplot(merged) +
geom_sf(aes(fill = t_count)) +
coord_sf(xlim = c(-175, -65)) +
theme(legend.position = "none",
line = element_blank(),
rect = element_blank(),
axis.text = element_blank(),
axis.title = element_blank(),
panel.grid.major = element_line(colour = "transparent"))
state_areas_merge <- read_csv("data/land/state_areas.csv") %>%
set_names(to_snake_case(colnames(.))) %>%
rename(name = state) %>%
right_join(merged_counts, by = "name") %>%
filter(name != "Alaska",
name != "Hawaii")
ggplot(state_areas_merge ) +
geom_sf(aes(fill = t_count)) +
coord_sf(xlim = c(-175, -65)) +
theme(legend.position = "none",
line = element_blank(),
rect = element_blank(),
axis.text = element_blank(),
axis.title = element_blank(),
panel.grid.major = element_line(colour = "transparent"))
wind_merged <- left_join(wind, state_areas_merged, by = "name")
state_areas <- read_csv("data/land/state_areas.csv") %>%
set_names(to_snake_case(colnames(.))) %>%
rename(name = state)
state_areas_merged <- left_join(merged_counts, state_areas, by = "name") %>%
filter(name != "Alaska",
name != "Hawaii")
ggplot(state_areas_merged) +
geom_sf(aes(fill = t_count)) +
coord_sf(xlim = c(-175, -65)) +
theme(legend.position = "none",
line = element_blank(),
rect = element_blank(),
axis.text = element_blank(),
axis.title = element_blank(),
panel.grid.major = element_line(colour = "transparent"))
wind <- read_csv("data/wind/wtk_site_metadata.csv") %>%
set_names(to_snake_case(colnames(.))) %>%
filter(power_curve != "offshore") %>%
group_by(state) %>%
summarise(ave_wind_speed = mean(wind_speed),
ave_cap_factor = mean(capacity_factor)) %>%
filter(state %in% state.name) %>%
rename("name" = "state")
wind_merged <- left_join(wind, state_areas_merged, by = "name")
ggplot(wind_merged) +
geom_sf(aes(fill = t_count)) +
coord_sf(xlim = c(-175, -65)) +
theme(legend.position = "none",
line = element_blank(),
rect = element_blank(),
axis.text = element_blank(),
axis.title = element_blank(),
panel.grid.major = element_line(colour = "transparent"))
merged_counts <- left_join(census_shp, turbine_summary, by = "name") %>%
mutate(t_count = ifelse(is.na(t_count), 0, t_count),
t_cap = ifelse(is.na(t_cap), 0, t_cap),
t_cap_mwh = ifelse(is.na(t_cap_mwh), 0, t_cap_mwh)) %>%
select(everything(), geometry) %>%
select(-t_state) %>%
filter(name != "Alaska",
name != "Hawaii")
ggplot(merged_counts) +
geom_sf(aes(fill = t_count)) +
coord_sf(xlim = c(-175, -65)) +
theme(legend.position = "none",
line = element_blank(),
rect = element_blank(),
axis.text = element_blank(),
axis.title = element_blank(),
panel.grid.major = element_line(colour = "transparent"))
state_areas <- read_csv("data/land/state_areas.csv") %>%
set_names(to_snake_case(colnames(.))) %>%
rename(name = state)
View(state_areas)
a
state_areas <- read_csv("data/land/state_areas.csv") %>%
set_names(to_snake_case(colnames(.))) %>%
rename(name = state)
wind <- read_csv("data/wind/wtk_site_metadata.csv") %>%
set_names(to_snake_case(colnames(.))) %>%
filter(power_curve != "offshore") %>%
group_by(state) %>%
summarise(ave_wind_speed = mean(wind_speed),
ave_cap_factor = mean(capacity_factor)) %>%
filter(state %in% state.name) %>%
rename("name" = "state")
generation <- read_csv("data/wind/net_generation_for_wind.csv") %>%
filter(str_detect(description, "all sectors")) %>%
separate(description, sep = " :", into = c("name", "temp")) %>%
select(-temp) %>%
filter(name %in% state.name) %>%
filter(name != "Alaska",
name != "Hawaii") %>%
select(name, `2018`) %>%
rename("net_generation" = `2018`) %>%
mutate(net_generation = ifelse(net_generation == "--", 0, net_generation))
library(plyr)
join_all(state_areas, wind, generation, by = "name")
join_all(list(state_areas, wind, generation), by = "name", type = "left")
temp <- join_all(list(state_areas, wind, generation), by = "name", type = "left")
View(temp)
temp <- join_all(list(state_areas, wind, generation),
by = "name", type = "left") %>%
filter(name != "Alaska",
name != "Hawaii")
temp_merge <- join_all(list(state_areas, wind, generation),
by = "name", type = "left") %>%
filter(name != "Alaska",
name != "Hawaii")
merged <- left_join(merged_counts, temp_merge, by = "name")
ggplot(merged) +
geom_sf(aes(fill = t_count)) +
coord_sf(xlim = c(-175, -65)) +
theme(legend.position = "none",
line = element_blank(),
rect = element_blank(),
axis.text = element_blank(),
axis.title = element_blank(),
panel.grid.major = element_line(colour = "transparent"))
head(merged)
temp_merge <- join_all(list(state_areas, wind, generation),
by = "name", type = "left") %>%
filter(name != "Alaska",
name != "Hawaii")
merged <- left_join(merged_counts, temp_merge, by = "name")
ggplot(merged) +
geom_sf(aes(fill = t_count)) +
coord_sf(xlim = c(-175, -65)) +
theme(legend.position = "none",
line = element_blank(),
rect = element_blank(),
axis.text = element_blank(),
axis.title = element_blank(),
panel.grid.major = element_line(colour = "transparent"))
write_rds(final_merge, "data/merged/merged.rds")
merged %>%
st_set_geometry(NULL)
colnames(merged)
select(-c(name, geometry, t_count)) %>%
names() %>%
paste(collapse = " + ")
reg_vars <- merged %>%
st_set_geometry(NULL) %>%
select(-c(name, geometry, t_count)) %>%
names() %>%
paste(collapse = " + ")
reg_vars <- merged %>%
st_set_geometry(NULL) %>%
select(-c(name, t_count)) %>%
names() %>%
paste(collapse = " + ")
lm(as.formula(paste0("t_count ~ ", reg_vars)), data = merged)
merged %>%
st_set_geometry(NULL)
generation <- read_csv("data/wind/net_generation_for_wind.csv") %>%
filter(str_detect(description, "all sectors")) %>%
separate(description, sep = " :", into = c("name", "temp")) %>%
select(-temp) %>%
filter(name %in% state.name) %>%
filter(name != "Alaska",
name != "Hawaii") %>%
select(name, `2018`) %>%
rename("net_generation" = `2018`) %>%
mutate(net_generation = ifelse(net_generation == "--", 0, net_generation)) %>%
mutate(net_generation = as.numeric(net_generation))
generation <- read_csv("data/wind/net_generation_for_wind.csv") %>%
filter(str_detect(description, "all sectors")) %>%
separate(description, sep = " :", into = c("name", "temp")) %>%
select(-temp) %>%
filter(name %in% state.name) %>%
filter(name != "Alaska",
name != "Hawaii") %>%
select(name, `2018`) %>%
rename(net_generation = `2018`) #%>%
generation <- read_csv("data/wind/net_generation_for_wind.csv") %>%
filter(str_detect(description, "all sectors")) %>%
separate(description, sep = " :", into = c("name", "temp")) %>%
select(-temp) %>%
filter(name %in% state.name) %>%
filter(name != "Alaska",
name != "Hawaii") %>%
select(name, `2018`) #%>%
View(generation_merge)
View(generation)
generation <- read_csv("data/wind/net_generation_for_wind.csv") %>%
filter(str_detect(description, "all sectors")) %>%
separate(description, sep = " :", into = c("name", "temp")) %>%
select(-temp) %>%
filter(name %in% state.name) %>%
filter(name != "Alaska",
name != "Hawaii") %>%
select(name, `2018`) %>%
rename(net_generation = `2018`) #%>%
generation <- read_csv("data/wind/net_generation_for_wind.csv") %>%
filter(str_detect(description, "all sectors")) %>%
separate(description, sep = " :", into = c("name", "temp")) %>%
select(-temp) %>%
filter(name %in% state.name) %>%
filter(name != "Alaska",
name != "Hawaii") %>%
select(name, `2018`) %>%
rename("net_generation" = `2018`) #%>%
colnames(generation)
generation <- read_csv("data/wind/net_generation_for_wind.csv") %>%
filter(str_detect(description, "all sectors")) %>%
separate(description, sep = " :", into = c("name", "temp")) %>%
select(-temp) %>%
filter(name %in% state.name) %>%
filter(name != "Alaska",
name != "Hawaii") %>%
select(name, `2018`) %>%
rename("net_generation" = "2018") #%>%
generation <- read_csv("data/wind/net_generation_for_wind.csv") %>%
filter(str_detect(description, "all sectors")) %>%
separate(description, sep = " :", into = c("name", "temp")) %>%
select(-temp) %>%
filter(name %in% state.name) %>%
filter(name != "Alaska",
name != "Hawaii") %>%
select(name, `2018`) %>%
rename(net_generation = 2018)
generation <- read_csv("data/wind/net_generation_for_wind.csv") %>%
filter(str_detect(description, "all sectors")) %>%
separate(description, sep = " :", into = c("name", "temp")) %>%
select(-temp) %>%
filter(name %in% state.name) %>%
filter(name != "Alaska",
name != "Hawaii") %>%
select(name, `2018`) %>%
rename(net_generation = "2018")
generation <- read_csv("data/wind/net_generation_for_wind.csv") %>%
filter(str_detect(description, "all sectors")) %>%
separate(description, sep = " :", into = c("name", "temp")) %>%
select(-temp) %>%
filter(name %in% state.name) %>%
filter(name != "Alaska",
name != "Hawaii") %>%
select(name, `2018`) %>%
rename(net_generation = `2018`)
generation <- read_csv("data/wind/net_generation_for_wind.csv") %>%
filter(str_detect(description, "all sectors")) %>%
separate(description, sep = " :", into = c("name", "temp")) %>%
select(-temp) %>%
filter(name %in% state.name) %>%
filter(name != "Alaska",
name != "Hawaii") %>%
select(name, `2018`) %>%
set_names(to_snake_case(colnames(.)))
colnames(generation)
generation$`2018`
generation <- read_csv("data/wind/net_generation_for_wind.csv") %>%
filter(str_detect(description, "all sectors")) %>%
separate(description, sep = " :", into = c("name", "temp")) %>%
select(-temp) %>%
filter(name %in% state.name) %>%
filter(name != "Alaska",
name != "Hawaii") %>%
select(name, `2018`) %>%
set_names(to_snake_case(colnames(.))) %>%
rename(net_generation = `2018`)
generation <- read_csv("data/wind/net_generation_for_wind.csv") %>%
filter(str_detect(description, "all sectors")) %>%
separate(description, sep = " :", into = c("name", "temp")) %>%
select(-temp) %>%
filter(name %in% state.name) %>%
filter(name != "Alaska",
name != "Hawaii") %>%
select(name, `2018`) %>%
set_names(to_snake_case(colnames(.))) %>%
rename("net_generation" = `2018`)
generation <- read_csv("data/wind/net_generation_for_wind.csv") %>%
filter(str_detect(description, "all sectors")) %>%
separate(description, sep = " :", into = c("name", "temp")) %>%
select(-temp) %>%
filter(name %in% state.name) %>%
filter(name != "Alaska",
name != "Hawaii") %>%
select(name, `2018`) %>%
set_names(to_snake_case(colnames(.))) %>%
rename(`2018` = temp)
generation <- read_csv("data/wind/net_generation_for_wind.csv") %>%
filter(str_detect(description, "all sectors")) %>%
separate(description, sep = " :", into = c("name", "temp")) %>%
select(-temp) %>%
filter(name %in% state.name) %>%
filter(name != "Alaska",
name != "Hawaii") %>%
select(name, `2018`) %>%
rename("temp" = `2018`)
generation <- read_csv("data/wind/net_generation_for_wind.csv") %>%
filter(str_detect(description, "all sectors")) %>%
separate(description, sep = " :", into = c("name", "temp")) %>%
select(-temp) %>%
filter(name %in% state.name) %>%
filter(name != "Alaska",
name != "Hawaii") %>%
#  select(name, `2018`) %>%
rename("temp" = `2018`)
generation <- read_csv("data/wind/net_generation_for_wind.csv") %>%
filter(str_detect(description, "all sectors")) %>%
separate(description, sep = " :", into = c("name", "temp")) %>%
select(-temp) %>%
filter(name %in% state.name) %>%
filter(name != "Alaska",
name != "Hawaii") %>%
#  select(name, `2018`) %>%
rename(temp = `2018`)
generation <- read_csv("data/wind/net_generation_for_wind.csv") %>%
filter(str_detect(description, "all sectors")) %>%
separate(description, sep = " :", into = c("name", "temp")) %>%
select(-temp) %>%
filter(name %in% state.name) %>%
filter(name != "Alaska",
name != "Hawaii") %>%
select(name, `2018`)
generation <- read_csv("data/wind/net_generation_for_wind.csv") %>%
filter(str_detect(description, "all sectors")) %>%
separate(description, sep = " :", into = c("name", "temp")) %>%
select(-temp) %>%
filter(name %in% state.name) %>%
filter(name != "Alaska",
name != "Hawaii") %>%
select(name, net_generation)
generation <- read_csv("data/wind/net_generation_for_wind.csv") %>%
filter(str_detect(description, "all sectors")) %>%
separate(description, sep = " :", into = c("name", "temp")) %>%
select(-temp) %>%
filter(name %in% state.name) %>%
filter(name != "Alaska",
name != "Hawaii") %>%
select(name, net_generation) %>%
mutate(net_generation = ifelse(net_generation == "--", 0, net_generation)) %>%
mutate(net_generation = as.numeric(net_generation))
temp_merge <- join_all(list(state_areas, wind, generation),
by = "name", type = "left") %>%
filter(name != "Alaska",
name != "Hawaii")
merged <- left_join(merged_counts, temp_merge, by = "name")
write_rds(final_merge, "data/merged/merged.rds")
reg_vars <- merged %>%
st_set_geometry(NULL) %>%
select(-c(name, t_count)) %>%
names() %>%
paste(collapse = " + ")
lm(as.formula(paste0("t_count ~ ", reg_vars)), data = merged)
summary(lm(as.formula(paste0("t_count ~ ", reg_vars)), data = merged))
library(tidyverse)
library(sf)
library(readxl)
library(snakecase)
library(tidycensus)
library(plyr)
rm(list = ls())
setwd("C:/Users/User02/Desktop/Harris/spatial_reg/turbines-in-space")
turbines <- read_sf(
"C:/Users/User02/Desktop/Harris/spatial_reg/final_project/turbines/uswtdb_v3_0_20200417.shp")
census_api_key("375b79c384981482079e44ee2ac6f45f8f2df381")
v18 <- load_variables(2018, "acs5", cache = TRUE)
vars <- c(
median_income = "B19013_001",
white = "B02001_002",
black = "B02001_003",
amer_ind = "B02001_004",
asian = "B02001_005",
na_pi = "B02001_006",
hisp = "B03001_003"
)
census_shp <- get_acs(
geography = "state",
variables = vars,
year = 2018,
geometry = TRUE) %>%
set_names(to_snake_case(colnames(.))) %>%
filter(name %in% state.name) %>%
select(name, variable, estimate) %>%
spread(variable, estimate)
states <- census_shp %>%
select(name)
turbine_summary <- turbines %>%
st_set_geometry(NULL) %>%
filter(p_year != "-9999",
t_cap != "-9999",
p_year <= 2018) %>%
group_by(t_state) %>%
summarize(t_count = n(),
t_cap = sum(t_cap)) %>%
mutate(name = state.name[match(t_state, state.abb)]) %>%
mutate(t_cap_mwh = t_cap/1000) %>%
na.omit()
merged_counts <- left_join(census_shp, turbine_summary, by = "name") %>%
mutate(t_count = ifelse(is.na(t_count), 0, t_count),
t_cap = ifelse(is.na(t_cap), 0, t_cap),
t_cap_mwh = ifelse(is.na(t_cap_mwh), 0, t_cap_mwh)) %>%
select(everything(), geometry) %>%
select(-t_state) %>%
filter(name != "Alaska",
name != "Hawaii")
state_areas <- read_csv("data/land/state_areas.csv") %>%
set_names(to_snake_case(colnames(.))) %>%
rename(name = state)
wind <- read_csv("data/wind/wtk_site_metadata.csv") %>%
set_names(to_snake_case(colnames(.))) %>%
filter(power_curve != "offshore") %>%
group_by(state) %>%
summarise(ave_wind_speed = mean(wind_speed),
ave_cap_factor = mean(capacity_factor)) %>%
filter(state %in% state.name) %>%
rename("name" = "state")
generation <- read_csv("data/wind/net_generation_for_wind.csv") %>%
filter(str_detect(description, "all sectors")) %>%
separate(description, sep = " :", into = c("name", "temp")) %>%
select(-temp) %>%
filter(name %in% state.name) %>%
filter(name != "Alaska",
name != "Hawaii") %>%
select(name, net_generation) %>%
mutate(net_generation = ifelse(net_generation == "--", 0, net_generation)) %>%
mutate(net_generation = as.numeric(net_generation))
temp_merge <- join_all(list(state_areas, wind, generation),
by = "name", type = "left") %>%
filter(name != "Alaska",
name != "Hawaii")
merged <- left_join(merged_counts, temp_merge, by = "name")
turbine_summary <- turbines %>%
st_set_geometry(NULL) %>%
filter(p_year != "-9999",
t_cap != "-9999",
p_year <= 2018) %>%
group_by(t_state) %>%
summarize(t_count = n(),
t_cap = sum(t_cap)) %>%
mutate(name = state.name[match(t_state, state.abb)]) %>%
mutate(t_cap_mwh = t_cap/1000) %>%
na.omit()
census_shp <- get_acs(
geography = "state",
variables = vars,
year = 2018,
geometry = TRUE) %>%
set_names(to_snake_case(colnames(.))) %>%
filter(name %in% state.name) %>%
select(name, variable, estimate) %>%
spread(variable, estimate)
states <- census_shp %>%
select(name)
turbine_summary <- turbines %>%
st_set_geometry(NULL) %>%
filter(p_year != "-9999",
t_cap != "-9999",
p_year <= 2018) %>%
group_by(t_state) %>%
summarize(t_count = n(),
t_cap = sum(t_cap)) %>%
mutate(name = state.name[match(t_state, state.abb)]) %>%
mutate(t_cap_mwh = t_cap/1000) %>%
na.omit()
turbine_summary <- turbines %>%
st_set_geometry(NULL) %>%
filter(p_year != "-9999",
t_cap != "-9999",
p_year <= 2018) #%>%
turbine_summary <- turbines %>%
st_set_geometry(NULL) %>%
filter(p_year != "-9999",
t_cap != "-9999",
p_year <= 2018) %>%
group_by(t_state) %>%
summarize(t_count = n(),
t_cap = sum(t_cap)) %>%
mutate(name = state.name[match(t_state, state.abb)]) %>%
mutate(t_cap_mwh = t_cap/1000) %>%
na.omit()
library(tidyverse)
library(sf)
library(readxl)
library(snakecase)
library(tidycensus)
turbine_summary <- turbines %>%
st_set_geometry(NULL) %>%
filter(p_year != "-9999",
t_cap != "-9999",
p_year <= 2018) %>%
group_by(t_state) %>%
summarize(t_count = n(),
t_cap = sum(t_cap)) %>%
mutate(name = state.name[match(t_state, state.abb)]) %>%
mutate(t_cap_mwh = t_cap/1000) %>%
na.omit()
