library(tidyverse)
library(sf)
library(readxl)
library(snakecase)
library(tidycensus)
library(spdep)
rm(list = ls())
setwd("C:/Users/User02/Desktop/Harris/spatial_reg/turbines-in-space")
turbines <- read_sf(
"C:/Users/User02/Desktop/Harris/spatial_reg/final_project/turbines/uswtdb_v3_0_20200417.shp") %>%
filter(t_state == "TX")
census_api_key("375b79c384981482079e44ee2ac6f45f8f2df381")
vars <- c(
median_income = "B19013_001",
white = "B02001_002",
black = "B02001_003",
amer_ind = "B02001_004",
asian = "B02001_005",
na_pi = "B02001_006",
hisp = "B03001_003"
)
vars <- c(
median_income = "B19013_001",
white = "B02001_002",
black = "B02001_003",
amer_ind = "B02001_004",
asian = "B02001_005",
na_pi = "B02001_006",
hisp = "B03001_003"
)
census_shp_tx<- get_acs(
geography = "county",
variables = vars,
state = "48",
year = 2018,
geometry =TRUE) %>%
set_names(to_snake_case(colnames(.))) %>%
select(name, variable, estimate) %>%
spread(variable, estimate) %>%
separate(name, into = c("t_county", "temp"), sep = ",") %>%
select(-temp)
turbine_summary_tx <- turbines %>%
st_set_geometry(NULL) %>%
filter(p_year != "-9999",
p_year <= 2018) %>%
group_by(t_county) %>%
summarize(t_count = n()) %>%
na.omit()
elevation <- read_csv("data/texas/tx_elevation.csv") %>%
set_names(to_snake_case(colnames(.))) %>%
mutate(name = paste(name, "County")) %>%
rename(t_county = name)
land_area <- read_csv("data/texas/tx_land_area.csv") %>%
mutate(county = paste(county, "County")) %>%
rename(t_county = county)
wind_speed <- read_csv("data/texas/tx_wind_speed.csv") %>%
set_names(to_snake_case(colnames(.))) %>%
separate(county_population, sep = ",", into = c("t_county", "temp")) %>%
separate(average_wind_speed, sep = " ", into = c("ave_wind_speed", "temp")) %>%
select(-temp) %>%
mutate(t_county = paste(t_county, "County"),
ave_wind_speed = as.numeric(ave_wind_speed)) %>%
mutate(t_county =
ifelse(
t_county == "Mcculloch County", "McCulloch County",
ifelse(
t_county == "Mcmullen County", "McMullen County",
ifelse(
t_county == "Mcmullen County", "McMullen County",
ifelse(
t_county == "Mclennan County", "McLennan County",
ifelse(
t_county == "De Witt County", "DeWitt County",
t_county))))))
temp_merge <- plyr::join_all(list(elevation,
land_area,
wind_speed,
turbine_summary_tx),
by = "t_county", type = "left")
merged_tx <- left_join(census_shp_tx, temp_merge, by = "t_county") %>%
mutate(t_count = ifelse(is.na(t_count), 0, t_count)) %>%
st_transform(2163)
ggplot(merged_tx) +
geom_sf(aes(fill = t_count)) +
theme(legend.position = "none",
line = element_blank(),
rect = element_blank(),
axis.text = element_blank(),
axis.title = element_blank(),
panel.grid.major = element_line(colour = "transparent"))
joincount.mc(merged_tx$t_count, list_queen)
coords <- st_centroid(st_geometry(merged_tx))
neighbors_queen <- poly2nb(merged_tx)
list_queen <- nb2listw(neighbors_queen)
joincount.mc(merged_tx$t_count, list_queen)
joincount.mc(merged_tx$t_county, list_queen)
joincount.mc(as.factor(merged_tx$t_county), list_queen)
joincount.mc(as.factor(merged_tx$t_county), list_queen, nsims = 100)
joincount.mc(as.factor(merged_tx$t_county), list_queen, nsim = 100)
joincount.mc(as.factor(merged_tx$t_count), list_queen, nsim = 100)
reg_glm <- glm(as.formula(paste0("t_count ~ ", reg_vars)),
data = merged_tx,
family = "poisson")
summary(reg_glm)
reg_vars <- merged_tx %>%
st_set_geometry(NULL) %>%
select(
-c(t_county, t_count)
) %>%
names() %>%
paste(collapse = " + ")
reg_glm <- glm(as.formula(paste0("t_count ~ ", reg_vars)),
data = merged_tx,
family = "poisson")
summary(reg_glm)
reg_glm <- lm(as.formula(paste0("t_count ~ ", reg_vars)),
data = merged_tx)
summary(reg_glm)
reg_glm <- lm(as.formula(paste0("t_count ~ ", reg_vars)),
data = merged_tx)
summary(reg_glm)
coords <- st_centroid(st_geometry(merged_tx))
neighbors_queen <- poly2nb(merged_tx)
list_queen <- nb2listw(neighbors_queen)
lm.morantest(reg_glm, list_queen)
lm.LMtests(reg_ols, list_queen, test = "all")
lm.LMtests(reg_glm, list_queen, test = "all")
View(reg_glm)
colnames(merged_tx)
library(tidyverse)
library(sf)
library(spdep)
rm(list = ls())
setwd("C:/Users/User02/Desktop/Harris/spatial_reg/turbines-in-space")
merged <- read_rds("data/merged/final_merge.rds") %>%
st_transform(2163)
# kNN
coords <- st_centroid(st_geometry(merged))
neighbors_knn <- knearneigh(coords, k=4)
# Queen
neighbors_queen <- poly2nb(merged)
list_queen <- nb2listw(neighbors_queen)
# reg analysis
reg_vars <- merged %>%
st_set_geometry(NULL) %>%
select(
-c(name, t_count)
) %>%
names() %>%
paste(collapse = " + ")
reg_ols <- lm(as.formula(paste0("t_count ~ ", reg_vars)), data = merged)
summary(reg_ols)
# reg analysis
reg_vars <- merged %>%
st_set_geometry(NULL) %>%
select(
-c(name, t_count, amer_ind, asian, black, hisp, na_pi, white)
) %>%
names() %>%
paste(collapse = " + ")
reg_ols <- lm(as.formula(paste0("t_count ~ ", reg_vars)), data = merged)
summary(reg_ols)
lm.morantest(reg_ols, list_queen)
lm.LMtests(reg_ols, list_queen, test = "all")
elevation <- read_csv("data/wind/elevation.csv")
elevation <- read_csv("data/land/elevation.csv")
View(elevation)
elevation <- read_csv("data/land/elevation.csv")
elevation <- read_csv("data/land/elevation.csv")
elevation <- read_csv("data/land/elevation.csv")
elevation <- read_csv("data/land/elevation.csv") %>%
mutate(min_elev = ifelse(min_elev == "Sea level", 0, min_elev))
elevation <- read_csv("data/land/elevation.csv") %>%
mutate(min_elev = ifelse(min_elev == "Sea level", 0, min_elev)) %>%
rename(name = State)
elevation <- read_csv("data/land/elevation.csv") %>%
mutate(min_elev = ifelse(min_elev == "Sea level", 0, min_elev)) %>%
rename(name = State) %>%
filter(name %in% state.name)
elevation <- read_csv("data/land/elevation.csv") %>%
mutate(min_elev = ifelse(min_elev == "Sea level", 0, min_elev)) %>%
rename(name = State) %>%
filter(name %in% state.name) %>%
filter(name != "Alaska",
name != "Hawaii")
state_areas <- read_csv("data/land/state_areas.csv") %>%
set_names(to_snake_case(colnames(.))) %>%
rename(name = state) %>%
filter(name != "Alaska",
name != "Hawaii")
wind <- read_csv("data/wind/wtk_site_metadata.csv") %>%
set_names(to_snake_case(colnames(.))) %>%
filter(power_curve != "offshore") %>%
group_by(state) %>%
summarise(ave_wind_speed = mean(wind_speed)) %>%
filter(state %in% state.name) %>%
rename("name" = "state") %>%
filter(name != "Alaska",
name != "Hawaii")
state_areas <- read_csv("data/land/state_areas.csv") %>%
set_names(to_snake_case(colnames(.))) %>%
rename(name = state)
wind <- read_csv("data/wind/wtk_site_metadata.csv") %>%
set_names(to_snake_case(colnames(.))) %>%
filter(power_curve != "offshore") %>%
group_by(state) %>%
summarise(ave_wind_speed = mean(wind_speed)) %>%
filter(state %in% state.name) %>%
rename("name" = "state")
elevation <- read_csv("data/land/elevation.csv") %>%
mutate(min_elev = ifelse(min_elev == "Sea level", 0, min_elev)) %>%
rename(name = State) %>%
filter(name %in% state.name)
temp_merge <- plyr::join_all(list(state_areas,
wind,
elevation),
by = "t_county", type = "left")
temp_merge <- plyr::join_all(list(state_areas,
wind,
elevation),
by = "name", type = "left")
View(temp_merge)
temp_merge <- plyr::join_all(list(state_areas,
wind,
elevation),
by = "name", type = "left") %>%
filter(name != "Alaska",
name != "Hawaii")
View(temp_merge)
head(merged_counts)
turbines <- read_sf(
"C:/Users/User02/Desktop/Harris/spatial_reg/final_project/turbines/uswtdb_v3_0_20200417.shp")
census_api_key("375b79c384981482079e44ee2ac6f45f8f2df381")
vars <- c(
median_income = "B19013_001",
white = "B02001_002",
black = "B02001_003",
amer_ind = "B02001_004",
asian = "B02001_005",
na_pi = "B02001_006",
hisp = "B03001_003"
)
census_shp <- get_acs(
geography = "state",
variables = vars,
year = 2018,
geometry = TRUE) %>%
set_names(to_snake_case(colnames(.))) %>%
filter(name %in% state.name) %>%
select(name, variable, estimate) %>%
spread(variable, estimate)
census_api_key("375b79c384981482079e44ee2ac6f45f8f2df381")
census_shp <- get_acs(
geography = "state",
variables = vars,
year = 2018,
geometry = TRUE) %>%
set_names(to_snake_case(colnames(.))) %>%
filter(name %in% state.name) %>%
select(name, variable, estimate) %>%
spread(variable, estimate)
states <- census_shp %>%
select(name)
turbine_summary <- turbines %>%
st_set_geometry(NULL) %>%
filter(p_year != "-9999",
p_year <= 2018) %>%
group_by(t_state) %>%
summarize(t_count = n()) %>%
mutate(name = state.name[match(t_state, state.abb)])
merged_counts <- left_join(census_shp, turbine_summary, by = "name") %>%
mutate(t_count = ifelse(is.na(t_count), 0, t_count)) %>%
select(everything(), geometry) %>%
select(-t_state) %>%
filter(name != "Alaska",
name != "Hawaii")
head(merged_counts)
state_areas <- read_csv("data/land/state_areas.csv") %>%
set_names(to_snake_case(colnames(.))) %>%
rename(name = state)
wind <- read_csv("data/wind/wtk_site_metadata.csv") %>%
set_names(to_snake_case(colnames(.))) %>%
filter(power_curve != "offshore") %>%
group_by(state) %>%
summarise(ave_wind_speed = mean(wind_speed)) %>%
filter(state %in% state.name) %>%
rename("name" = "state")
elevation <- read_csv("data/land/elevation.csv") %>%
mutate(min_elev = ifelse(min_elev == "Sea level", 0, min_elev)) %>%
rename(name = State) %>%
filter(name %in% state.name)
temp_merge <- plyr::join_all(list(state_areas,
wind,
elevation),
by = "name", type = "left") %>%
filter(name != "Alaska",
name != "Hawaii")
final_merge <- left_join(merged_counts, temp_merge, by = "name")
final_merge
write_rds(final_merge, "data/merged/final_merge.rds")
merged <- read_rds("data/merged/final_merge.rds") %>%
st_transform(2163)
# reg analysis
reg_vars <- merged %>%
st_set_geometry(NULL) %>%
select(
-c(name, t_count, amer_ind, asian, black, hisp, na_pi, white)
) %>%
names() %>%
paste(collapse = " + ")
reg_vars
reg_ols <- lm(as.formula(paste0("t_count ~ ", reg_vars)), data = merged)
summary(reg_ols)
elevation <- read_csv("data/land/elevation.csv") %>%
mutate(min_elev = ifelse(min_elev == "Sea level", 0, min_elev)) %>%
rename(name = State) %>%
filter(name %in% state.name) %>%
mutate(min_elev = as.numeric(min_elev))
View(elevation)
elevation <- read_csv("data/land/elevation.csv") %>%
mutate(min_elev = ifelse(min_elev == "Sea level", 0, min_elev)) %>%
rename(name = State) %>%
filter(name %in% state.name) #%>%
elevation <- read_csv("data/land/elevation.csv") %>%
mutate(min_elev = ifelse(min_elev == "Sea level", 0, min_elev)) %>%
rename(name = State) %>%
filter(name %in% state.name) #%>%
elevation <- read_csv("data/land/elevation.csv") %>%
mutate(min_elev = ifelse(min_elev == "Sea level", 0, min_elev)) %>%
rename(name = State) %>%
filter(name %in% state.name) %>%
mutate(min_elev = as.numeric(min_elev))
elevation <- read_csv("data/land/elevation.csv") %>%
rename(name = State) %>%
filter(name %in% state.name)
temp_merge <- plyr::join_all(list(state_areas,
wind,
elevation),
by = "name", type = "left") %>%
filter(name != "Alaska",
name != "Hawaii")
final_merge <- left_join(merged_counts, temp_merge, by = "name")
write_rds(final_merge, "data/merged/final_merge.rds")
View(temp_merge)
merged <- read_rds("data/merged/final_merge.rds") %>%
st_transform(2163)
# reg analysis
reg_vars <- merged %>%
st_set_geometry(NULL) %>%
select(
-c(name, t_count, amer_ind, asian, black, hisp, na_pi, white)
) %>%
names() %>%
paste(collapse = " + ")
reg_ols <- lm(as.formula(paste0("t_count ~ ", reg_vars)), data = merged)
summary(reg_ols)
lm.morantest(reg_ols, list_queen)
lm.morantest(reg_ols, list_queen)
lm.LMtests(reg_ols, list_queen, test = "all")
reg_ols <- lm(as.formula(paste0("t_count ~ ", reg_vars)), data = merged)
summary(reg_ols)
head(merged)
summary(reg_ols)
lm.morantest(reg_ols, list_queen)
lm.LMtests(reg_ols, list_queen, test = "all")
head(median_income)
head(merged)
merged <- read_rds("data/merged/final_merge.rds") %>%
st_transform(2163) %>%
mutate(median_income2 = median_income*median_income)
# reg analysis
reg_vars <- merged %>%
st_set_geometry(NULL) %>%
select(
-c(name, t_count, amer_ind, asian, black, hisp, na_pi, white)
) %>%
names() %>%
paste(collapse = " + ")
reg_ols <- lm(as.formula(paste0("t_count ~ ", reg_vars)), data = merged)
summary(reg_ols)
merged <- read_rds("data/merged/final_merge.rds") %>%
st_transform(2163) %>%
mutate(median_income2 = median_income*median_income)
# kNN
coords <- st_centroid(st_geometry(merged))
neighbors_knn <- knearneigh(coords, k=4)
# reg analysis
reg_vars <- merged %>%
st_set_geometry(NULL) %>%
select(
-c(name, t_count, amer_ind, asian, black, hisp, na_pi, white)
) %>%
names() %>%
paste(collapse = " + ")
reg_ols <- lm(as.formula(paste0("t_count ~ ", reg_vars)), data = merged)
summary(reg_ols)
# reg analysis
reg_vars <- merged %>%
st_set_geometry(NULL) %>%
select(
-c(name, t_count, amer_ind, asian, black, hisp, na_pi, white)
) %>%
names() %>%
paste(collapse = " + ")
reg_ols <- lm(as.formula(paste0("t_count ~ ", reg_vars)), data = merged)
summary(reg_ols)
lm.morantest(reg_ols, neighbors_knn)
lm.morantest(reg_ols, nb2listw(knn2nb(neighbors_knn)))
lm.morantest(reg_ols, nb2listw(knn2nb(neighbors_knn)))
lm.LMtests(reg_ols, nb2listw(knn2nb(neighbors_knn)), test = "all")
reg_vars
reg_ols <- lm(as.formula(paste0("t_count ~ ", reg_vars)), data = merged)
summary(reg_ols)
# reg analysis
reg_vars <- merged %>%
st_set_geometry(NULL) %>%
select(
-c(name, t_count, amer_ind, asian, black, hisp, na_pi, white)
) %>%
names() %>%
paste(collapse = " + ")
reg_ols <- lm(as.formula(paste0("t_count ~ ", reg_vars)), data = merged)
summary(reg_ols)
merged <- read_rds("data/merged/final_merge.rds") %>%
st_transform(2163) %>%
mutate(median_income2 = median_income*median_income)
# kNN
coords <- st_centroid(st_geometry(merged))
neighbors_knn <- knearneigh(coords, k=4)
# Queen
neighbors_queen <- poly2nb(merged)
list_queen <- nb2listw(neighbors_queen)
# reg analysis
reg_vars <- merged %>%
st_set_geometry(NULL) %>%
select(
-c(name, t_count, amer_ind, asian, black, hisp, na_pi, white)
) %>%
names() %>%
paste(collapse = " + ")
reg_ols <- lm(as.formula(paste0("t_count ~ ", reg_vars)), data = merged)
lm.morantest(reg_ols, list_queen)
lm.LMtests(reg_ols, list_queen, test = "all")
lm.morantest(reg_ols, nb2listw(knn2nb(neighbors_knn)))
lm.LMtests(reg_ols, nb2listw(knn2nb(neighbors_knn)), test = "all")
read_csv("test_pvalues.csv")
